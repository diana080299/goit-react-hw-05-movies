{"version":3,"file":"static/js/412.05a70a0b.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","helples/percentCount.js","pages/MoviesSearch/MoviesSearch.styled.js","pages/MoviesSearch/MoviesSearch.jsx","helples/transformCountriesData.js","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  margin-left: 20px;\n`;\nexport const Title = styled.h2`\n  font-size: 35px;\n  font-weight: 800;\n  max-width: 550px;\n  margin: 15px\n`;\nexport const Span = styled.span`\n  font-weight: 400;\n  font-size: 28px;\n`;\nexport const Block = styled.div`\n  margin: 30px;\n`;\n","import percentCount from 'helples/percentCount';\nimport { Block, Div, Span, Title } from './MovieInfo.styled';\n\nexport const MovieInfo = ({ movieInfo }) => {\n  const { poster_path, original_title, overview, vote_average, genres } =\n    movieInfo;\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <Div>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w300${poster_path}`\n            : defaultImg\n        }\n        alt={original_title}\n        width={500}\n      />\n      <Block>\n        <h1 className=\"fw-bold\" style={{ marginBottom: '15px' }}>\n          {original_title}\n        </h1>\n        <span className=\"fw-bolder\">\n          User Score: {percentCount(vote_average)}%\n        </span>\n        <Title>\n          Overview: <Span>{overview}</Span>{' '}\n        </Title>\n        <Title>Genres:</Title>\n        <ul>\n          {genres.map(({ name, id }) => (\n            <li key={id}>\n              <p>{name}</p>\n            </li>\n          ))}\n        </ul>\n      </Block>\n    </Div>\n  );\n};\n","export default function percentCount(score) {\n  return Math.floor(score * 10);\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 45px;\n  font-weight: 800;\n  max-width: 550px;\n  margin: 25px;\n`;\nexport const Btn = styled.button`\n  margin: 25px;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'service/api';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { Btn, Title } from './MoviesSearch.styled';\n\nconst MovieSearch = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const location = useLocation();\n\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const resultMovie = await getMovieById(movieId);\n      try {\n        setMovieInfo(resultMovie);\n      } catch (error) {\n        alert('Error fetching movie details');\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      {movieInfo && (\n        <div>\n          <Btn\n            className=\"btn btn-primary btn-lg text-black-50 bg-white\"\n            type=\"button\"\n          >\n            <Link to={backLinkRef.current}>Go back</Link>\n          </Btn>\n          <MovieInfo movieInfo={movieInfo} />\n          <Title>Additional information</Title>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieSearch;\n","export const transformMoviesData = data => {\n  return data.results.map(({ id, title, poster_path }) => ({\n    id: id,\n    name: title,\n    image: poster_path,\n  }));\n};\nexport function percent(score) {\n  return Math.floor(score * 10);\n}\n","import axios from 'axios';\nimport { transformMoviesData } from 'helples/transformCountriesData';\n\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3YzExY2RlYTcyMzc3YzAzNDU5ZWQzNmRjODQwNmZiNyIsInN1YiI6IjY1NmI2ZWEzODg2MzQ4MDBjOWUwZTZiZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Vwf_lNzH6GZMg2Sepu5F0CPoBSGG6cLt1TGM_pUkhAg';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] = `Bearer ${API_KEY}`;\n\nexport const getPopularMovies = async () => {\n  try {\n    const { data } = await axios.get(`/trending/movie/day`);\n    const movies = transformMoviesData(data);\n    return movies;\n  } catch (error) {\n    console.error('Error fetching popular movies:', error);\n    throw error;\n  }\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await axios.get(`/search/movie?query=${query}`);\n  const movies = transformMoviesData(data);\n  return movies;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["Div","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Span","_templateObject3","Block","_templateObject4","MovieInfo","_ref","score","movieInfo","poster_path","original_title","overview","vote_average","genres","_jsxs","children","_jsx","src","concat","alt","width","className","style","marginBottom","Math","floor","map","_ref2","name","id","Btn","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovieInfo","location","useLocation","backLinkRef","useRef","state","from","useEffect","fetchMovie","_asyncToGenerator","_regeneratorRuntime","_callee","resultMovie","_context","prev","next","getMovieById","sent","error","alert","stop","apply","arguments","_Fragment","type","Link","to","current","Outlet","transformMoviesData","data","results","title","image","axios","getPopularMovies","_yield$axios$get","movies","abrupt","t0","console","_callee2","_yield$axios$get2","_context2","_x","getSearchMovie","_ref3","_callee3","query","_yield$axios$get3","_context3","_x2","getCast","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}