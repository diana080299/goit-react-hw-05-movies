{"version":3,"file":"static/js/257.a16c6553.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movie/Movie.jsx","helples/transformCountriesData.js","service/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const MovieList = ({ movies, location }) => {\n  return (\n    <ul>\n      {movies.map(({ id, name, poster_path }) => {\n        const defaultImg =\n          'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n        return (\n          <li\n            className=\"border w- p-3 border-success p-2 mb-2 border-opacity-25\"\n            key={id}\n          >\n            <Link\n              className=\"text-xxl-end text-body-secondary\"\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : defaultImg\n                }\n                alt={name}\n                width={200}\n              />\n              {name}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\nexport const Div = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  margin-left: 42px;\n\n  gap: 5px;\n`;\n","import { useState } from 'react';\nimport { Div, Form } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <Div>\n      <Form onSubmit={handleSubmit}>\n        <label className=\"form-label\">\n          <input\n            onChange={handleChange}\n            aria-label=\"select\"\n            type=\"text\"\n            required\n            autoFocus\n            autoComplete=\"off\"\n            placeholder=\"Enter your search term\"\n            value={value}\n            className=\"form-control\"\n          />\n        </label>\n        <button className=\"btn btn-primary mb-3\" type=\"submit\">\n          Search\n        </button>\n      </Form>\n    </Div>\n  );\n};\n","import { MovieList } from 'components/MovieList/MovieList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'service/api';\n\nconst Movie = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState('');\n  const [params, setParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const value = params.get('query');\n    if (!value) return;\n\n    const handleMovieList = async () => {\n      const response = await getSearchMovie(value);\n      try {\n        setMovie(response);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    handleMovieList();\n  }, [params]);\n\n  const handleChangeList = query => {\n    if (query === '') {\n      return setParams({});\n    }\n    setParams({ query });\n  };\n\n  return (\n    <section>\n      <div>\n        <SearchForm onSubmit={handleChangeList} />\n        {error && <p>Error: {error}</p>}\n        {movie && <MovieList movies={movie} location={location} />}\n      </div>\n    </section>\n  );\n};\n\nexport default Movie;\n","export const transformMoviesData = data => {\n  return data.results.map(({ id, title, poster_path }) => ({\n    id: id,\n    name: title,\n    image: poster_path,\n  }));\n};\nexport function percent(score) {\n  return Math.floor(score * 10);\n}\n","import axios from 'axios';\nimport { transformMoviesData } from 'helples/transformCountriesData';\n\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3YzExY2RlYTcyMzc3YzAzNDU5ZWQzNmRjODQwNmZiNyIsInN1YiI6IjY1NmI2ZWEzODg2MzQ4MDBjOWUwZTZiZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Vwf_lNzH6GZMg2Sepu5F0CPoBSGG6cLt1TGM_pUkhAg';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] = `Bearer ${API_KEY}`;\n\nexport const getPopularMovies = async () => {\n  try {\n    const { data } = await axios.get(`/trending/movie/day`);\n    const movies = transformMoviesData(data);\n    return movies;\n  } catch (error) {\n    console.error('Error fetching popular movies:', error);\n    throw error;\n  }\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await axios.get(`/search/movie?query=${query}`);\n  const movies = transformMoviesData(data);\n  return movies;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["MovieList","_ref","movies","location","_jsx","children","map","_ref2","id","name","poster_path","className","_jsxs","Link","to","concat","state","from","src","alt","width","Div","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","SearchForm","onSubmit","_useState","useState","_useState2","_slicedToArray","value","setValue","e","preventDefault","onChange","target","type","required","autoFocus","autoComplete","placeholder","movie","setMovie","_useState3","_useState4","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","useLocation","useEffect","get","handleMovieList","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","getSearchMovie","sent","message","stop","apply","arguments","query","transformMoviesData","data","results","title","image","axios","getPopularMovies","_yield$axios$get","abrupt","t0","console","getMovieById","_callee2","_yield$axios$get2","_context2","_x","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getCast","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}